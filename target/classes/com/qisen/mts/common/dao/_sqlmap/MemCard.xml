<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.qisen.mts.common.dao.mem.CardDao">

	<insert id="create" parameterType="com.qisen.mts.common.model.entity.mem.Card">
		<selectKey resultType="java.lang.Integer" order="BEFORE"
			keyProperty="id">
			select seq_mem_card.nextval as id from dual
		</selectKey>
		<![CDATA[
			insert into mem_card(id,eid,sid,memid,discount,cardfee,sumcardfee,cardtypeno,cardno,consumetimes,consumefee,presentfee,sumpresentfee,initcardfee,initpresentfee,crossflag,validdate,inputdate,status) values 
			(#{id},#{eid},#{sid},#{memId},#{discount},#{cardFee},#{sumCardFee},#{cardTypeNo},#{cardNo},#{consumeTimes},#{consumeFee},#{presentFee},#{sumPresentFee},#{initCardFee},#{initPresentFee},#{crossFlag},#{validDate},sysdate,1)
		]]>
	</insert>

	<insert id="importCard">
		<![CDATA[
			insert into mem_card(id,eid,sid,memid,discount,cardfee,
			sumcardfee,cardtypeno,cardno,consumetimes,consumefee,presentfee,
			sumpresentfee,initcardfee,initpresentfee,crossflag,validdate,inputdate,status)  
		]]>
		select seq_mem_card.nextval,a.*
		from (
		<foreach collection="list" item="obj" index="index" separator="union all">
			select #{obj.eid} eid,#{obj.sid} sid,#{obj.memId} memId,#{obj.discount} discount,#{obj.cardFee} cardFee,
					#{obj.sumCardFee} sumCardFee,#{obj.cardTypeNo} cardTypeNo,#{obj.cardNo} cardNo,0 consumetimes,0 consumefee,#{obj.presentFee} presentfee,
					#{obj.sumPresentFee} sumpresentfee,#{obj.cardFee} initcardfee,#{obj.presentFee} initpresentfee,1 crossflag,#{obj.validDate} validdate,
					#{obj.inputDate} inputdate,'1' status
					from dual
		</foreach>
		) a
	</insert>

	<update id="update4Charge">
		<![CDATA[
			update mem_card 
			set cardfee = nvl(cardfee,0) + #{cardFee},
				sumcardfee = nvl(sumcardfee,0) + #{cardFee},
				presentfee = nvl(presentfee,0) + #{presentFee},
				sumpresentfee = nvl(sumpresentfee,0) + #{presentFee}
			where eid = #{eid} and id = #{id}
		]]>
	</update>

	<update id="update4Pay">
		<![CDATA[
			update mem_card 
			set cardfee = nvl(cardfee,0) - #{cardFee},
				presentfee = nvl(presentfee,0) - #{presentFee},
				consumefee = nvl(consumefee,0) + #{cardFee}
			where eid = #{eid} and id = #{id}
				and nvl(cardfee,0) >= #{cardFee}
				and nvl(presentfee,0) >= #{presentFee}
		]]>
	</update>

	<update id="rollback4Charge">
		<![CDATA[
			update mem_card 
			set cardfee = nvl(cardfee,0) - #{cardFee},
				sumcardfee = nvl(sumcardfee,0) - #{cardFee},
				presentfee = nvl(presentfee,0) - #{presentFee},
				sumpresentfee = nvl(sumpresentfee,0) - #{presentFee}
			where eid = #{eid} and id = #{id}
				and nvl(cardfee,0) >= #{cardFee}
				and nvl(presentfee,0) >= #{presentFee}
		]]>
	</update>

	<update id="rollback4Pay">
		<![CDATA[
			update mem_card 
			set cardfee = nvl(cardfee,0) + #{cardFee},
				presentfee = nvl(presentfee,0) + #{presentFee}
			where eid = #{eid} and id = #{id}
		]]>
	</update>

	<update id="updateConsumeInfo">
		<![CDATA[
			update mem_card 
			set consumefee = nvl(consumefee,0) + #{fee},
		]]>
		<choose>
			<when test="rollback == 0">
				consumetimes = nvl(consumetimes,0) + 1
			</when>
			<otherwise>
				consumetimes = nvl(consumetimes,0) - 1
			</otherwise>
		</choose>
		<![CDATA[
			where eid = #{eid} and id = #{id}
		]]>
	</update>

	<select id="checkCardNo" resultType="java.lang.Integer">
		<![CDATA[
			select count(id) from mem_card 
			where eid = #{eid} and sid= #{sid} 
			and cardtypeno= #{body.cardTypeNo}
			and cardno = #{body.cardNo}
		]]>
	</select>

	<select id="findByMemId" resultType="com.qisen.mts.common.model.entity.mem.Card">
		<![CDATA[
			select id,eid,sid,memid,discount,cardfee,sumcardfee,cardtypeno,cardno,consumefee,presentfee,sumpresentfee,initcardfee,initpresentfee,crossflag,validdate,inputdate,status
			from mem_card 
			where memid = #{memId}  and eid= #{eid} and status = 1
		]]>
	</select>

	<select id="find" resultType="com.qisen.mts.common.model.entity.mem.Card">
		<![CDATA[
			select id,eid,sid,memid,discount,cardfee,sumcardfee,cardtypeno,cardno,consumefee,presentfee,sumpresentfee,initcardfee,initpresentfee,crossflag,validdate,inputdate,status
			from mem_card 
			where eid = #{eid} and id = #{id}
		]]>
	</select>

	<select id="getSumCardFeeBySid" resultType="com.qisen.mts.common.model.entity.mem.Card">
		<![CDATA[
			select sum(cardfee) sumCardFee,sum(presentfee) sumPresentFee
			from mem_card 
			where sid = #{sid} and status='1'
		]]>
	</select>

	<select id="getCardById" resultType="com.qisen.mts.common.model.entity.mem.Card">
		<![CDATA[
			select *
			from mem_card 
			where sid = #{sid} and eid = #{eid} and id = #{id}
		]]>
	</select>

	<select id="countCardRecord" resultType="java.lang.Integer">
		<![CDATA[
			select count(id)
			from ${tbuser}.e${eid}_mem_card_record
			where eid=#{eid} and memsid=#{memsid} and memcardid=#{id}
		]]>
	</select>

	<select id="cardRecord" resultType="java.util.Map">
		<![CDATA[
			select a.* from(
			select m.id 'id',b.NO 'billNO',b.btype 'bType',m.paycardfee 'payCardFee',m.presentfee 'payPresentFee',m.cardfee 'cardFee',m.presentfee 'presentFee',rownum rnum
			 from 
			${tbuser}.e${eid}_mem_card_record m 
			left join 
			${tbuser}.e${eid}_busi_bill b  on m.billid=b.id and m.sid=b.sid 
		]]>
		<where>
			<![CDATA[
				m.eid=#{eid} and m.memsid=#{memsid} and m.memcardid=#{id} order by m.id 
			]]>
		</where>
		<![CDATA[
			 )a where  rnum between #{startIndex} and #{endIndex}
		]]>
	</select>
	<update id="updatestatus">
		<![CDATA[
			update mem_card
		]]>
		<set>
			<![CDATA[
				status = #{status}
			]]>
		</set>
		<![CDATA[
			where eid=#{eid} and id=#{id}
		]]>
	</update>
	
	<update id="deleteStatus">
		<![CDATA[
			update mem_card set status = '0' where eid=#{eid} and sid=#{sid} and memId = #{body.memId} and cardTypeNo = #{body.cardTypeNo} and cardNo = #{body.cardNo}
		]]>
	</update>
	
	<!-- 疗程导入检测卡号是否存在 -->
	<select id="checkCardid" resultType="com.qisen.mts.common.model.entity.mem.Card">
		<![CDATA[
			select id,memid
			from mem_card 
		]]>
		<where>
			<![CDATA[
				sid=#{sid} and eid=#{eid}  and  status = 1
			]]>
		</where>
		<if test="cardNo!=null and cardNo!=''">
			<![CDATA[
				and cardno = #{cardNo}
			]]>
		</if>
		<if test="cardTypeNo!=null and cardTypeNo!=''">
			<![CDATA[
				and cardtypeno= #{cardTypeNo}
			]]>
		</if>
		<if test="mobile!=null and mobile!=''">
			<![CDATA[	
				 and memid in(select id from mem_member where sid=#{sid} and eid=#{eid} and mobile=#{mobile} )
			]]>
		</if>
	</select>
</mapper>
