<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.qisen.mts.common.dao.base.CompanyDao">

	<select id="list" resultType="com.qisen.mts.common.model.entity.base.Company">
		<![CDATA[
			select * from base_company 
		]]>
		<where>
			<![CDATA[
				eid = #{eid} and status = '1'
			]]>
			<if test="sid != null and sid > 0">
				<![CDATA[
					and (sid = #{sid} or nvl(sid,0) = 0)
				]]>
			</if>
		</where>
		<![CDATA[
			order by cast(REGEXP_SUBSTR(no, '[0-9]+') as int)
		]]>
	</select>

	<insert id="create" parameterType="com.qisen.mts.common.model.entity.base.Company">
		<![CDATA[
			insert into base_company(id,eid,sid,no,name,linkMan,mobile,status) values (seq_base_company.nextval,#{eid},#{sid},#{no},#{name},#{linkMan},#{mobile},1)
		]]>
	</insert>

	<update id="update" parameterType="com.qisen.mts.common.model.entity.base.Company">
		<![CDATA[
			update base_company set name = #{name},linkMan = #{linkMan},mobile = #{mobile} where eid = #{eid} and id = #{id}
		]]>
	</update>

	<update id="status">
		<![CDATA[
			update base_company set status = #{body.status} where eid = #{eid}
		]]>
		<foreach collection="body.ids" index="index" item="id" open="and (" close=")" separator="or">     
			id = #{id}
		</foreach>
	</update>

	<select id="check" resultType="java.lang.Integer" parameterType="com.qisen.mts.common.model.entity.base.Company">
		<![CDATA[
			select count(id) from base_company 
		]]>
		<where>
			<![CDATA[
				status = '1'
			]]>
			<choose>
                <when test="sid != null and sid > 0">
	                <![CDATA[
						and (eid = #{eid} or sid = #{sid})
					]]>
                </when>
                <otherwise>
                	<![CDATA[
						and eid = #{eid}
					]]>
				</otherwise>
         	</choose>
			<![CDATA[
				and( no = #{no} or name = #{name})
			]]>
			<if test="id != null and id > 0">
				<![CDATA[
					and id <> #{id}
				]]>
			</if>
		</where>
	</select>

</mapper>
